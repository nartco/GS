{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["/**\n * asset - Android `assets/` folder or iOS/MacOS main bundle.\n * resource - Android `res/` folder.\n */\nexport type AssetType = 'asset' | 'resource';\n\nexport type Encoding = 'utf8' | 'base64';\n\nexport type ExternalDir = 'audio' | 'downloads' | 'images' | 'video';\n\nexport type NetworkType = 'any' | 'unmetered';\n\nexport type FetchInit = {\n  body?: string;\n  headers?: { [key: string]: string };\n  method?: string;\n\n  /**\n   * Allowed connection. Throws if specified connection is unavailable.\n   */\n  network?: NetworkType;\n\n  /**\n   * Output path.\n   */\n  path?: string;\n};\n\nexport type FetchResult = {\n  /**\n   * Response HTTP headers.\n   */\n  headers: { [key: string]: string };\n\n  /**\n   * True if the response is a 2XX HTTP status.\n   */\n  ok: boolean;\n\n  /**\n   * Note: this value may not be accurate.\n   */\n  redirected: boolean;\n\n  /**\n   * HTTP response status code.\n   */\n  status: number;\n\n  /**\n   * Associated text for HTTP status code.\n   */\n  statusText: string;\n\n  /**\n   * Final URL provided by the HTTP response.\n   */\n  url: string;\n};\n\nexport type FetchCompleteEvent = {\n  requestId: number;\n  state: 'complete';\n} & FetchResult;\n\nexport type FetchErrorEvent = {\n  requestId: number;\n  state: 'error';\n  message: string;\n};\n\nexport type FetchProgressEvent = {\n  requestId: number;\n  state: 'progress';\n  bytesRead: number;\n  contentLength: number;\n  done: boolean;\n};\n\nexport type FetchEvent =\n  | FetchCompleteEvent\n  | FetchErrorEvent\n  | FetchProgressEvent;\n\n/**\n * MD5 and SHA-1 are insecure. Avoid when possible.\n */\nexport type HashAlgorithm =\n  | 'MD5'\n  | 'SHA-1'\n  | 'SHA-224'\n  | 'SHA-256'\n  | 'SHA-384'\n  | 'SHA-512';\n\nexport type ManagedFetchResult = {\n  cancel: () => Promise<void>;\n  result: Promise<FetchResult>;\n};\n\nexport type ProgressListener = (\n  bytesRead: number,\n  contentLength: number,\n  done: boolean\n) => void;\n"],"mappings":""}