"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toBeChecked = toBeChecked;
var _jestMatcherUtils = require("jest-matcher-utils");
var _accessibility = require("../helpers/accessibility");
var _errors = require("../helpers/errors");
var _utils = require("./utils");
function toBeChecked(element) {
  (0, _utils.checkHostElement)(element, toBeChecked, this);
  if (!hasValidAccessibilityRole(element)) {
    throw new _errors.ErrorWithStack(`toBeChecked() works only on accessibility elements with "checkbox" or "radio" role.`, toBeChecked);
  }
  return {
    pass: (0, _accessibility.getAccessibilityCheckedState)(element) === true,
    message: () => {
      const is = this.isNot ? 'is' : 'is not';
      return [(0, _jestMatcherUtils.matcherHint)(`${this.isNot ? '.not' : ''}.toBeChecked`, 'element', ''), '', `Received element ${is} checked:`, (0, _utils.formatElement)(element)].join('\n');
    }
  };
}
function hasValidAccessibilityRole(element) {
  if (!(0, _accessibility.isAccessibilityElement)(element)) {
    return false;
  }
  const role = (0, _accessibility.getAccessibilityRole)(element);
  return role === 'checkbox' || role === 'radio';
}
//# sourceMappingURL=to-be-checked.js.map