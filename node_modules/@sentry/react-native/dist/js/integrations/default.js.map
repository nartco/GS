{"version":3,"file":"default.js","sourceRoot":"","sources":["../../../src/js/integrations/default.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable complexity */\nimport type { BrowserOptions } from '@sentry/react';\nimport type { Integration } from '@sentry/types';\n\nimport type { ReactNativeClientOptions } from '../options';\nimport { ReactNativeTracing } from '../tracing';\nimport { isExpoGo, notWeb } from '../utils/environment';\nimport {\n  breadcrumbsIntegration,\n  browserApiErrorsIntegration,\n  browserGlobalHandlersIntegration,\n  browserLinkedErrorsIntegration,\n  browserReplayIntegration,\n  debugSymbolicatorIntegration,\n  dedupeIntegration,\n  deviceContextIntegration,\n  eventOriginIntegration,\n  expoContextIntegration,\n  functionToStringIntegration,\n  hermesProfilingIntegration,\n  httpClientIntegration,\n  httpContextIntegration,\n  inboundFiltersIntegration,\n  mobileReplayIntegration,\n  modulesLoaderIntegration,\n  nativeLinkedErrorsIntegration,\n  nativeReleaseIntegration,\n  reactNativeErrorHandlersIntegration,\n  reactNativeInfoIntegration,\n  screenshotIntegration,\n  sdkInfoIntegration,\n  spotlightIntegration,\n  viewHierarchyIntegration,\n} from './exports';\nimport { createReactNativeRewriteFrames } from './rewriteframes';\n\n/**\n * Returns the default ReactNative integrations based on the current environment.\n *\n * Native integrations are only returned when native is enabled.\n *\n * Web integrations are only returned when running on web.\n */\nexport function getDefaultIntegrations(options: ReactNativeClientOptions): Integration[] {\n  const integrations: Integration[] = [];\n\n  if (notWeb()) {\n    integrations.push(\n      reactNativeErrorHandlersIntegration({\n        patchGlobalPromise: options.patchGlobalPromise,\n      }),\n    );\n    integrations.push(nativeLinkedErrorsIntegration());\n  } else {\n    integrations.push(browserApiErrorsIntegration());\n    integrations.push(browserGlobalHandlersIntegration());\n    integrations.push(browserLinkedErrorsIntegration());\n  }\n\n  // @sentry/react default integrations\n  integrations.push(inboundFiltersIntegration());\n  integrations.push(functionToStringIntegration());\n  integrations.push(breadcrumbsIntegration());\n  integrations.push(dedupeIntegration());\n  integrations.push(httpContextIntegration());\n  // end @sentry/react-native default integrations\n\n  integrations.push(nativeReleaseIntegration());\n  integrations.push(eventOriginIntegration());\n  integrations.push(sdkInfoIntegration());\n  integrations.push(reactNativeInfoIntegration());\n\n  if (__DEV__ && notWeb()) {\n    integrations.push(debugSymbolicatorIntegration());\n  }\n\n  integrations.push(createReactNativeRewriteFrames());\n\n  if (options.enableNative) {\n    integrations.push(deviceContextIntegration());\n    integrations.push(modulesLoaderIntegration());\n    if (options.attachScreenshot) {\n      integrations.push(screenshotIntegration());\n    }\n    if (options.attachViewHierarchy) {\n      integrations.push(viewHierarchyIntegration());\n    }\n    if (options._experiments && typeof options._experiments.profilesSampleRate === 'number') {\n      integrations.push(hermesProfilingIntegration());\n    }\n  }\n\n  // hasTracingEnabled from `@sentry/core` only check if tracesSampler or tracesSampleRate keys are present\n  // that's different from prev imp here and might lead misconfiguration\n  // `tracesSampleRate: undefined` should not enable tracing\n  const hasTracingEnabled =\n    options.enableTracing ||\n    typeof options.tracesSampleRate === 'number' ||\n    typeof options.tracesSampler === 'function';\n  if (hasTracingEnabled && options.enableAutoPerformanceTracing) {\n    integrations.push(new ReactNativeTracing());\n  }\n  if (options.enableCaptureFailedRequests) {\n    integrations.push(httpClientIntegration());\n  }\n\n  if (isExpoGo()) {\n    integrations.push(expoContextIntegration());\n  }\n\n  if (options.spotlight || options.enableSpotlight) {\n    const sidecarUrl = (typeof options.spotlight === 'string' && options.spotlight) || options.spotlightSidecarUrl;\n    integrations.push(spotlightIntegration({ sidecarUrl }));\n  }\n\n  if (\n    (options._experiments && typeof options._experiments.replaysOnErrorSampleRate === 'number') ||\n    (options._experiments && typeof options._experiments.replaysSessionSampleRate === 'number')\n  ) {\n    integrations.push(notWeb() ? mobileReplayIntegration() : browserReplayIntegration());\n    if (!notWeb()) {\n      (options as BrowserOptions).replaysOnErrorSampleRate = options._experiments.replaysOnErrorSampleRate;\n      (options as BrowserOptions).replaysSessionSampleRate = options._experiments.replaysSessionSampleRate;\n    }\n  }\n\n  return integrations;\n}\n"]}